{"ast":null,"code":"var _jsxFileName = \"/home/abhinav/Learning_file_2/online_multiplayer_game/frontend/src/components/Tictactoe.jsx\";\nimport React from 'react';\nimport cookie from 'react-cookies';\nimport Axios from 'axios'; // import {Button} from 'react-materialize'\n\nconst _require = require('../socket'),\n      ConnectUser = _require.ConnectUser,\n      getOnlineUsers = _require.getOnlineUsers,\n      disconnectSocket = _require.disconnectSocket,\n      socket = _require.socket;\n\nconst _require2 = require('../url'),\n      backendURL = _require2.backendURL;\n\nclass Tictactoe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOkay: false,\n      users: [],\n      ioId: ''\n    };\n    this.challenge = this.challenge.bind(this);\n  }\n\n  challenge(user) {\n    console.log(user);\n  }\n\n  async componentDidMount() {\n    Axios.get(\"\".concat(bac));\n    socket.on('OnlineUsers', data => {\n      this.setState({\n        users: data.users,\n        ioId: data.socket_id\n      });\n    });\n    console.log(this.props.match.params);\n    if (this.props.match.params.game === 'tictactoe') this.setState({\n      isOkay: true\n    });\n    ConnectUser();\n    getOnlineUsers();\n  }\n\n  componentWillUnmount() {\n    disconnectSocket();\n  }\n\n  render() {\n    console.log(this.state);\n    let connections = [];\n    if (this.state.users.length === 0) connections = React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"\\\"No one is online\\\"\");else {\n      const x = this.state.users.filter(i => {\n        if (i.user_id !== this.state.ioId) return i;\n      });\n      console.log(connections);\n      connections = x.map(i => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, i.name), React.createElement(\"button\", {\n          onClick: () => {\n            this.challenge(i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"challenge\"));\n      });\n    }\n\n    if (this.state.isOkay) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, connections);\n    } else {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Work is in developement\"));\n    }\n  }\n\n}\n\nexport default Tictactoe;","map":{"version":3,"sources":["/home/abhinav/Learning_file_2/online_multiplayer_game/frontend/src/components/Tictactoe.jsx"],"names":["React","cookie","Axios","require","ConnectUser","getOnlineUsers","disconnectSocket","socket","backendURL","Tictactoe","Component","constructor","props","state","isOkay","users","ioId","challenge","bind","user","console","log","componentDidMount","get","bac","on","data","setState","socket_id","match","params","game","componentWillUnmount","render","connections","length","x","filter","i","user_id","map","name","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport cookie from 'react-cookies';\nimport Axios from 'axios';\n// import {Button} from 'react-materialize'\n\nconst {ConnectUser,getOnlineUsers,disconnectSocket,socket}=require('../socket');\nconst {backendURL}=require('../url');\n\n\nclass Tictactoe extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            isOkay:false,\n            users:[],\n            ioId:''\n        };\n\n        this.challenge=this.challenge.bind(this);\n    }\n\n    challenge(user){\n        console.log(user);\n    }\n\n    async componentDidMount(){\n        Axios.get(`${bac}`)\n\n        socket.on('OnlineUsers',data=>{this.setState({users:data.users,ioId:data.socket_id})});\n        console.log(this.props.match.params);\n        if(this.props.match.params.game==='tictactoe')\n            this.setState({isOkay:true});\n        ConnectUser();\n        getOnlineUsers();\n    }\n    componentWillUnmount(){\n        disconnectSocket();\n    }\n\n    render(){\n        console.log(this.state);\n\n        let connections=[];\n        if(this.state.users.length===0)\n            connections=<h4>\"No one is online\"</h4>;\n        else{\n            const x=this.state.users.filter(i=>{\n               if(i.user_id!==this.state.ioId)\n                    return(\n                       i\n                    )\n            });\n            console.log(connections)\n            connections=x.map(i=>{\n                return(<div>\n                    <h1>{i.name}</h1>\n                    <button onClick={()=>{this.challenge(i)}}>challenge</button>\n                </div>);\n            })\n        }\n        if(this.state.isOkay){\n        return(\n            <div style={{textAlign:'center'}}>\n                {connections}\n            </div>\n        )\n    }\n    else{\n        return(\n            <div style={{textAlign:'center'}}>\n                <h1>Work is in developement</h1>\n            </div>\n        );\n    }\n}\n    \n}\n\nexport default Tictactoe;"]},"metadata":{},"sourceType":"module"}